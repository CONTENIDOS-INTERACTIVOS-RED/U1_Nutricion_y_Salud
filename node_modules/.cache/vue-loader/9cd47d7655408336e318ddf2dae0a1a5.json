{"remainingRequest":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/src/views/curso/Tema2.vue?vue&type=template&id=6e2c312d&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/src/views/curso/Tema2.vue","mtime":1740343726931},{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Nutricion_y_Salud/U1_Nutricion_y_Salud/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}